/* * This file is part of the DataStore package. * * @author (c) Tim Shelburne <tim@dontlookstudios.com> * * For the full copyright and license information, please view the LICENSE * file that was distributed with this source code. */package dls.datastore.repositories {		import flash.utils.describeType;		import dls.debugger.Debug;		import dls.datastore.domain.IDomainEntity;	import dls.datastore.repositories.IEntityMetadata;		/*	 * A convenience class to ease using describeType for entities stored in	 * the DataStore.	 */	public class EntityMetadata implements IEntityMetadata {				/*=========================================================*		 * PROPERTIES		 *=========================================================*/				private var _klass:String;		private var _properties:Vector.<String> = new <String>[];		private var _references:Vector.<String> = new <String>[];		private var _methods:Vector.<String>  	= new <String>[];				public function get klass():String {			return _klass;		}				public function get properties():Vector.<String> {			return _properties;		}				public function get references():Vector.<String> {			return _references;		}				public function get methods():Vector.<String> {			return _methods;		}				/*=========================================================*		 * FUNCTIONS		 *=========================================================*/		public function EntityMetadata(entity:*) {			var description:XML = describeType(entity);						_klass = description.@name.split("::")[1];						for each (var accessor:XML in description.accessor) {				var property:String = accessor.@name;				if (entity[property] is IDomainEntity) {					_references.push(property);				}				else {					_properties.push(property);				}			}						for each (var method:XML in description.method) {				_methods.push(method.@name);			}						Debug.out({"Properties":_properties, "References":_references, "Methods":_methods}, Debug.DEBUG, { "source" : "DataStore (EntityMetadata)", "title":_klass, "separated":true});		}				/**		 * UNFINISHED - checks that an entity matches the metadata for this klass		 */		public function matches(entity:IDomainEntity):Boolean {			return true;		}			}	}